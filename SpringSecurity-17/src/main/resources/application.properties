server.port=8081


#
#spring.security.oauth2.client.registration.keycloak.client-id=springboot-api
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.springboot-api.issuer-uri=http://localhost:8080/realms/springboot-api
#spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/springboot-api

#spring.security.oauth2.client.provider.external.issuer-uri=http://localhost:8080/realms/external

spring.security.oauth2.client.registration.springboot-api.provider=springboot-api
spring.security.oauth2.client.registration.springboot-api.client-name=apispringboot
spring.security.oauth2.client.registration.springboot-api.client-id=springboot-api
spring.security.oauth2.client.registration.springboot-api.client-secret=tLy5PVtGuIqnRL7yjphiQk7pKHdcPuP2
spring.security.oauth2.client.registration.springboot-api.scope=openid
spring.security.oauth2.client.registration.springboot-api.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.springboot-api.redirect-uri=http://localhost:8081/users